" vim: set fen fdm=marker

" TODO: make this path relative
source ~/dotfiles/layers/vim/prelude.vim

runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

" Visual {{{1
let g:sierra_Pitch=1
colorscheme sierra
set laststatus=0
set noruler


" Movement {{{1
nnoremap <silent> = :m .+1<cr>==
nnoremap <silent> - :m .-2<cr>==

vnoremap <silent> < <gv
vnoremap <silent> > >gv

nnoremap [ mzo<esc>`z
nnoremap ] mzO<esc>`z


" File save status {{{1
function! s:SetFileSaveStatus()
  if (&mod ==# 1)
    highlight LineNr ctermfg=white
  else
    highlight LineNr ctermfg=darkgray
  endif
endfunction

augroup FileSaveStatus
  autocmd!
  autocmd BufWritePost,TextChanged,TextChangedI * call <SID>SetFileSaveStatus()
augroup END


" Modal Status {{{1
function! s:SetVisualColor()
  highlight CursorLineNr ctermbg=yellow ctermfg=white
endfunction

" TODO: account for replace mode here
function! s:SetInsertColor()
  highlight CursorLineNr ctermbg=green ctermfg=white
endfunction

function! s:SetNormalColor()
  highlight CursorLineNr ctermbg=blue ctermfg=white
endfunction

augroup ModalStatus
  autocmd!
  autocmd InsertEnter * call s:SetInsertColor()
  autocmd InsertLeave * call s:SetNormalColor()
augroup END

" Setup visual mode hooks
vnoremap <silent> <expr> <SID>SetVisualColor <SID>SetVisualColor()
vnoremap <silent> <esc> <esc>:call <SID>SetNormalColor()<cr>
vnoremap <silent> <C-\><C-n> <esc>:call <SID>SetNormalColor()<cr>
vnoremap <silent> <C-c> <esc>:call <SID>SetNormalColor()<cr>
nnoremap <silent> <script> v v<SID>SetVisualColor
nnoremap <silent> <script> V V<SID>SetVisualColor
nnoremap <silent> <script> <C-v> <C-v><SID>SetVisualColor

call s:SetNormalColor()

set noshowmode

